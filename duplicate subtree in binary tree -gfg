/*The structure of the Binary Tree Node  is
struct Node
{
  char data;
  struct Node* left;
  struct Node* right;
};*/

class Solution {
  public:
    /*This function returns true if the tree contains 
    a duplicate subtree of size 2 or more else returns false*/
    map<string, int> mp;
    
    string solve(Node* root) {
        if (!root) return "";
        
        string left = solve(root -> left);
        string right = solve(root -> right);
        
        left += (char)(root -> data + '0');
        left += right;
        
        mp[left]++;
        return left;
    }
    
    int dupSub(Node *root) {
        solve(root);
        for (auto &i : mp) {
            if (i.first.size() >= 2 and i.second > 1) return 1;
        }
        return 0;
   
    }
};
